package internal

import (
	"encoding/base64"

	"fyne.io/fyne/v2"
)

var (
	flag      = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAAAsSAAALEgHS3X78AAAFFElEQVRIx0WWy48dVxHGf1XndN87dzwPezwvQsaDYgZryChIDggESAERwyoENlkgJFYoEn8Bkdgi2LAFZcOChyAiCUIRkAhlgRCIRxAmQXZiJ2PASTyx53Fn5j66+5wqFn1nWLS6pe5TXd9Xv/N1y8zUshfnN8GcrhhDi7g4AuBGe6EA4N6eAKS9Pr0HZHF6HkkkhruvEuPih9n43Pd59Mp9HA36TIWpdolCOKlpMlnuk/qOeQaXyTsFd6iLGh8o52Zn+PF3HyeKGY9cWWXnVp87u5nG9sFBNSCiuDs5Z0QEsRFbazM8uJagzPzoN320PIsZmDmFGtOzgq6XaFkToxvJG/qDgrmNkhWdZzgcU9cZQUAClivWlqa5XL/Np5/7FuNvPMnN8yus3j+DeoecjZycAzWaAP95d4BbJNYo065I0bCQA/e9v8PdPXhvb4jVR2zMKR+/9wYP/Op5Fq/+Ht95h+qJx8jn16iKih7TREDNWRgHqqYidjqIOBEXVAuOjw4Zz3a5+dYOM70eW0uRy6+/zOVfPku49Tf0vT2ooRYwmdgtRlDBXXE3QpEQixweDhG6RETIyTnqjyiXEw/PDvjoaz/jfX95kZnrN8n9u3hucCtQHBNDzBAgiCACIi1CySHVgaPDMcI0EQEzIzd9Hru9zeYPv830zpv09sZUKpSWJtQVGEbAUJETdlpcmWDpBZYzqRFyyugJuxqneelDn+LnX/8BT1/4CH+ISpMEiLgr5hGhxb6StpwKxBiIRaAIbfvGmBCM7MdE3BEZkr3LbhW5UU3T+cr32N35N9evvsDmH3/NB48PWdJANieFLoUZ4hCDEMtETkAoSJ4YDVuVISqx7UXBHLXAfLlEJvHGuS6vPbLM6Evf5OqzT7H+uxf5JM50U9FoK0HUAcUyjMeJ0VFDUxnJIKdE9FNnhJQSUkBHC8rOIsnm+NNhn/DoU7z58NcY/uN5Hnr5Oc7k1vOUnGHVMBplRoPE8NipazB3LCf0tHPAUkYmwwmqdGOXhc4yM+UyO4sP8IvPPsnrT/+Tla9+GYC6NoYDox63ClIj5MbJua0RIQCCICezbbc6jnsbYIUGzsosjXbZX5lHwwzud2gqoxkZ7lCWBdgYy45NQi2KZNwLkCFlmEId1Az39jCMnAQRwXMk1hEs0UhmVNXoyIlFwB2SKUjGgZyN6G64GVEKLCu5NswSOSfMDBEBcVSUlKyVHJxu6pGaAdIYISpFEbE8ImebhKW3xcejitGopr8/RIrWDncHBFXBJeNm5GRY7bgFstzDTXFrVelp5Bs2mZyCIwqCkjN4FsQVTLHkNGMjNUJdwcpcweZFJ6VEp/cB5rtCymPcczs3mczNTzwHAgLmLevaPtB2n9E84sxU5MHNRS5dqNm5/RI//fuI/aNdvrB1hTsX5rm2fRdvMqoTpRMoorty3GvIVaZKfZrDeRAhMuKLn1nj0kVlfVVZOFu2uNrjqHKKbDK4u3eeG2+NeeW/iWee2cY6JY4Sy1AQyhssXBqyfW2dpdlDYozMTzV0Opnb2wf8+a/3ODg4oGkaVLX9MrkQIohC2Z3i3LlFhgOh6V5j48LH+Nd1JZoOeeWFVT7x+VnuvXvI8XEkm7G73+U7P7nFsLsDqY+RME8t+yIEAskaHEO1QP1tCpljY32LrYdWefW3ipzp3e/zSxcpe06YyqSRYtlON5Tjbaq2Tv4/Xk//ECbRiyBxll53ABK5c+sq/wOkEN6CymuQGwAAAABJRU5ErkJggg=="
	invisible = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAAAsSAAALEgHS3X78AAAENUlEQVRIx12Wva4lRxWFv7Wrzjl37sxlMLKxJcYYG8kREn8hIoIUBAEZz8CzkJLwDLwAGRERSAgShBDCjGXM3Llzf87p7tp7EdSZQaIq6FIFq3evtfbarSdfeMeX73+XXmb0gdYGGMlgEMIyNm+WBOng/1dGZ0dCiftP/ki//Np3+P7Pf82Pf/hlMmFgZCOJpgmgKPwG3YBQ6Q2oLWw46o5WBy53jV/+4id0luJHP3ibf1zf8M/nl+y8YoSiA6KqGKOQAALmB1EagLBFpakqDj5w9dbGhx8kfZf0imJP8Or6Md94tufii537h5VlKxzCCLudgWBsRVWycwcLF2SaTHhYTrSLx3zy/AbR6eHOmqY9Wjk8Db5y1fhP7PjsdmGTCIlJuBHBrgUQkzoaY5hOgUVbTqxLpw4XZImOIXrw6qY4fan4+9jYCKp3WsCs/bwNOLCNR6EwHbCDTLPjbYaLF58X8jt0C0xy/aJY3xdLNaIHXRM4nGQUU74A5llNU1zlvJcZemBdd7y8eQBdzcpLC8up49cAJazC5Nl68cYoOleuEnYiF5KxTAm2YdbTnvQLuhDSIOISIkmJwpNroFqgreZLzP/8XhBN7FojYgoddY/1lGiB+ZxuJcpLQid2HCgHTUZV2KA0qcAJgdk10cKoJQ1oCowZUXg9cHvH1EFXdPHaZmbbDFEYYxIZWt8RFDTTQ/QGEZ6OYXbusgb3xz0vX544LcWaG1XXdNeedFEuRgqRRA/iLBKZ0zUBvZnepi1riGFzXDZu78Tdnbm7D46nlbE1MHS745qEVgWHvWk+Ewy0EJKJ87POvK9bsaxwfxQPJyiCdYExVnI7ADs66igCBFWCMsS5eWoSJE3axigqYYxiWZLjKbg/Cgsu9kWedrgmRLHR4YbKoglaH4QMFpWianKPwDaZxu4si9jWPffHjXXZEX3jYg8bC1UNOSFFBxMRSDvGECc3MpOqmYS2aQEm2IbZRk4vr4NtDMYmHvXB/rBnbMUYhpxO62C2bXB8WHl1bdQhqxCBJCZfCSG2DMYw6WBsQgoqZyTMWAiqCnL2SJeEMVUiU0QLpE6VqeSc441axchiG+PcrR1rkCkQRHRam9FsZtN1+3UwBWMrLvYiIthG4jEpqyacZr9rHHZBNBMCopHZubgszELrEFHnwk1XM6saDw8LtxbLzWMUsG3F2GaUbq2wpwZTn6Af9tzfHVlOJ0SnXOzvjhzHFVdOxCVd2fDVpzz76Ja//PlDPni20PvsmkwxMvExqJqDwRS4aCSVptHPusCni8knf+ObH32Vf/3+NCv/7W/e5ac/u+L6s3v+/Tywk9YaER3mKDiPOGPOOixjnqtAJsK8Ve/x8ceP+N63nvC7X3X05Ol7fvfr3+bJTqg3kkGNol4DVRJnXfxmQEO9dpJ1/lsoWuy4eGyU5q9/+gP/BXlb0m4YF+e1AAAAAElFTkSuQmCC"
	mine      = "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"
	num_0     = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAAAsSAAALEgHS3X78AAAB0ElEQVRIx62VzW7UQBCEvxqPkw3hRwonOICiSLlyQDwAr8CJh4Irz8gJwa4Ednami4Pt9UablViHulgeyd/UVHePRZJFix2gAuYBpYMVoYO1BoEa7ET1HzJu+fL1Gze311y+aGFbQSJJIEhK1Ig9hI/CRUO3Law35vOnj2QIbm6veff+A7mFWgZQRGA8sOTZrzRs8MAJSwnOnzZ0/fCeUeHF1YqUKz/XG8wTALo+OFXnvuDH+jtXL5+P8IB6V3EVZgWcDp3UuUM8I7bNCP+Psn3v+QB8KpT/ETkroqK9Oh/2GMKnc0e4h5Y+Bre9O9aSWGyY3CUECkghKAVXFtdUaqjF2EM2GYNlrGHD0MJMmAo5f5/hbMiZip2JmAfm9MzjXh9kaEHCBBEiTmcedZ6gwcOgYyVsDw6Wwu87/40scKJyR3hJIJNTgbQzl4HRt+ZWeoT2jSXtoAPYNuFlsUiDc41jmmC8Xq1534Xup4J6HqLAEeNUzbsu1X6syQ5qI7ZNhliRCjSRFoFL7gkHkQoAOSHOUqJVR6MNtb1Y7Posglbn5LFk2STWv7bktOLtm0tKv5kOOP/N3BxeZnvp7Qr4+hWl7+lLN6znNrtsy6NyPqa/UogB7smK7DkAAAAASUVORK5CYII="
	num_1     = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAAAsSAAALEgHS3X78AAACPElEQVRIx52VTW4TQRCFv+rpcWKSEGQkJFiAQn52CQsELIErsOIAuQMcArasfI/cIyxB2UWwsogdJWO7u4pFz4wzcewk86SR7R77q9dV/caCExNyzBQkgHGD3NyKIHNrGQKSYeaIdonHcr59/8H23hZrmzlMI4jgREDAiSOqXkHYQriQUUwDw5Hx+dNHPCjbe1u8ev0Gn0MMCaSqGJZYYjO/IqnADTsMQVlZzyjG6bNHApu9VZyP/BuOMB4AUIyVRTr+ecbB/ubc+op1GQz/0nv8sIQrxEnEomCsAk3o6eklv36fA3B09AeAXq9zI7ywAmEDnWYlfIn6/ZMafBeZWeN1/hgg5dVUr9e5Fa4aa/AC51J/Yf/gEe8/PGF3Z51+/4TBYHIL3HBuCdzMavi7t707t2T2W6Bui4AoOBUIAYtcn+mdJZIRg2EmpXMDE8MkFVSxdmSqQTba0kl9JmLmUZ0F5r5S1Ua4POQggqGoCnp/5kLnDjIsBR0Th5klB23hTecXiAmYIzJBrU1DKqcCIrU5D5S+ZXaUSi1K6GAw4cvXYwB2d9Y5PHxZ37tqzEkNTWAzQ61dW0SS8/TkLOOvquXZLOu2PI3VQKsQekQx1TJVqerV+O/sbiwFdrvZtQKz995MiZkwzTxohosX1YbuHf/gx7iQoy4kuEPoOEcuBZmMiHm3XU+Ajiq5rOC1co5jeDbFu1VePF8jjEfVBmf/ZpY1HqVpetcGCbhnTwnjMeNQpHWfewvT0NrtMv0HTnkm2RWithwAAAAASUVORK5CYII="
	num_2     = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAAAsSAAALEgHS3X78AAAC00lEQVRIx52VMWgUURCGv3m7m4tGPVFI0MJggrGKKdRCCYJo7BS1EkmwClpoJ1YprTRXCYp1xFqUNAabINrYmHQKgqnUQjRBvcu9nbF4m93b3JlgBo7jZt9+8795/7wTnJiQYKYgHowO4doygrTlIgQkwsyR2h9iLGG69pDBoYP0VBNopiCCEwEBJ45UtQVh/4QLEfWmZ3nFuHL5NDEog0MHGTl6nDiB1AeQqmJYYIkVekVCgQ479F6p7IioN8LvGPFU93Tj4pQfyysY2wGoN5T/jYpt4/vyF/bs3ZXBFdLVFEsFoxsoQ+cWZ1hYmuftx+el/PjoFGPDE/RUdue5utURdqLNKINvEI9f3WZucabjsyev7zK3OMO9qy/zAmZW+m63AZJ9No+vPz+XiqumOfgfyqW0AGCgd4STQ+cBePPhBZ++vS8VKOCGcxvAzSyHHzlwirHhCQZ6R/LnF4/d4tqjw/xq/KDzu0D2foyAKDgV8B4jyRefOHShDbAe2lftL/YsEan3mEkGNzAxTEJBlY4jmkdtdjIv0FPZXRIQdlxqS1foMylmMarFwKxXXJudZGFpPs9dOn6zpFxVS8MVQwIiGIqqoB2M8unbe2qzk6XDGx+d4uKxW209X6c8wsKgY+Iw85gZzgWXvv34nNrsZAly/cw0Y8MTHQ+0VVsMvxETMEfKKmpFQ568vsuzdw/yxQO9I9w4e7/kntZwCIiE9pBZMeiWwkrAwtJ8CbzWnjtPz5VyY8MTXD8zXTimVbnk0AA2W2vS/4dk13S4ObPxV9XMm1ndrbHzA7ViiBRTzaYq3NdmRl+1n/HRqU2BrVYMBVraYqakkdCMYtAIl/4GHH3V/jarbRY+buB8gjof4A6hyzkSqRPJCmmybWs9AbpUSaRCrGvKcSz/bBK7bvoP9OAbK2sbLP7NLGq7KVttkR/g/n34RoOGr4d8nMTmm37LajeKvz2DWtzTgDyDAAAAAElFTkSuQmCC"
	num_3     = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAAAsSAAALEgHS3X78AAAC0ElEQVRIx52Vv28URxTHP2929s7G2JYAKUqEjBASUpAskCLkFJeCIlVShQaRylVEmrTJX0CTFDRcUl2FO3dQpXVDC5J7IkcCKYrs3WBu2Zn3Uuze7i17NiRf6bSatzOf92bfjxOcmJBipiABjAVyPYsgPVuCgCSYOaK9wWMpP//ykCtXL7OynkIZQQQnAgJOHFF1DmEnwoWEaRnIcuPON7fwoFy5epnrn93EpxBDBVJVDKtYYm28IpWDBTcMQRmeTZgW1dojgfVzSzgfOcxyjDMATAvlv2poy/ydveTc+bUarhDfRiwKxhLQheaTMce7jwgHfzS29NomK7e/ZeX23c7eqU0RVtEyqeGn6PXuDtmD+z17uf+cw/0fiQcvWPvhpzYbZp1nvwyQ+vd+5ZMxmh01a9XYgE+IXDobAIZbI4affwHAP5OHXWB2hFtbr+GGc6fAzayBDz7d5MJvOwy3Rg2o3H/Gm9+fNPtn4PYsUJ/3CIiCU4EQMNJO4vLJmL++u8sirW7f68BFEmIImEkNNzAxTCqHKgtbtKfh1qiTzDaR7XkHg+o7EzHzaDQ0vt9B8XSvdyNVZT5dHlIQwVBUBX2nUAbXNpsILTskn4w7DvLJmNXtewsj95BgVaNj4jALmBnOubZS6oQCnN3+nldfj5qKiQcvOp9lPjYHx4gJmCNSonP3+vPGRq+WX+/udNZ0YIKIQ+tB54E6bmlLaU7Zg/sLu3Sm5OKlzroTuTTQCmxmqH3Y0PIXNzrzRURAZpOzbv8qy3Ntb+3hkzTcGnH+151eE0HbhB5RTLXuqsrr7OVHj/conu7xdv95B7z85VcnOu6UopkSE6FMPGiCi8fMz7N3q+U0BV/gQoq6UMEdwsA5UpmSSE5Mlz8ItEgDVVIZ4nUWOY7sqMS7JS5trBCKfHbB9t/Mkt6knC+LJoGffEwoCoowrew+9RbK8L+jPU3/Ag+obwP026tTAAAAAElFTkSuQmCC"
	num_4     = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAAAsSAAALEgHS3X78AAACsklEQVRIx52VPWgUQRTHf292Nx9qEvAj4EeUkBD1LARFUbsQMaVEUlhZWNuIlWnEykZJE9KIgrYKaSwkIlqpCFpply4KVhrvNN7mZt+z2L29u2TvonnNMrPDb978/2/eCE5MiDBTEA9GQbgNM4JsmAsQkAAzR2J/CLGIu/fmGRkbZvtABLUERHAiIODEkag2IawtXAio1jzlinH50jghKCNjwxw/eYowgsSnIFXFsJQl1shXJN2g4ITeK907AqpxOg4Rz8DOHlyYsFKuYGwDoBor/xvd1sv38jd27urP4ArJWoIlgtEDtIe+XFzi5o3n+Xhq+hg3b43n46pVEfrQWpDB/zEq5Zi52Tcd15hZy7cAXjeqVdS52Td8/VLuCFdNkCafN9YYgq0z6+XiEgtPP296OlVLS7od3MzyYxXJ0dff3VEWM6hn5xAQBacC3mMJLZ4+evAhl2PiwihHS4Nt4SIBiTfMJIMbmBgm6YaK5ez375Z5/PBjnvFMU2W0y7zZqxC6Up1JMAtRtUyONe7cfpUvnLk13lGSVHNtqYMQIhDBUFQFlWI5Ji6Mbmro+swF+u3F62eMHC7xY0Xw5jEzzhyf3xRWj7n7Fzl9Zojfv2IEY3B3L6XhPYSwipiAORLWUKOgJf1bpNUhqTxkl8jS7tQoJeDa9XOFgIUnn3K5jpQGOT85yv4DA81SNDSXHJqCzQzDuHL1RCH8/dvlHH60tKdlnWRtWqReipnLaW1m+xY+GJtH3dBGbxHFVLNblfZrs/b0iclRTp8dAmD/gf6CDZpkMVOSQKgFIWiAS1YpbDlZTE0fa/vPhzHOR6jzKdwhdDlHJFUCqZBEvVvTBOhSJZJuQq1njqP8s0boejh0cDs+rtQP2HjNLNgoVVNZ5Abu24uPY2JfTefDKDRf81vOtlP8Bcl3Scp46WS5AAAAAElFTkSuQmCC"
	num_5     = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAAAsSAAALEgHS3X78AAACq0lEQVRIx62Vv2tUQRDHP7PvvfwwehEDonIxhEBADrzCH5AmYCFaWYiIjRbB1kpbsUjrVQEbxcJS/QdstbCxUTiENCEkhQgRvQNz5+3OWLz78Z73kpziNG93H/uZ2e/MzgpOTEgwUxAPRoG5oRVBhtYiBCTCzBFslxhLeFx7wsLiPFPTCXQCiOBEQMCJI6hmELYnXIhodTyNpnHr+iViUBYW56meu0CcQPApSFUxLGWJDeIVSR0UnNB7ZfxwRKudzmPEM31sAhcHvjeaGIcAaLWVv7Vxm+Rb4wvHZkpduEL4FbAgGBPAALr98gX1Rw/2BV75/LU/blkL4Qjaibrw/2hmlvsWwHuJshGRA1MNSCbPhfCe56xNzs4xe/POAXDDucHeIbiZFcIPleeYv3vvQFnMgL4sAqLgVMB7jKRwY6P+iTdnjudO8aczkYjgPWapNg4DE8MkdagYRUXYaXzvj3e3NlmvrfJh5cZQ5NlcORhLdSZgFqPB0DBaMnfev2X75YuM5kpW0RgSEMFQVAXNZLtUqbJ4/2EOuF5bzc1/1D9R3iPyGCIsveiYOMw8ZoZzjlKlSqlSzcHKN2/z7vLFnExZWbIdx8FPxATMEeigmXN9WLnBem2V3a3N/trG07VCcAoTRBzabXQx0I1bBqWUsY1na2w8W9tT9+nK2dw8F7n0oSnYzFAbrWmVKlXKmYslIiC9ztl9BdIsy8DvCMVy4uo1zj9/NaQ5WKa3iGKq3VuVeu39PP/8NTvv39KofxxKalI6Wug0V4pmSoiEThSDRrjwk+yzNrO0zMzS8kgy+biN8wnqfAp3CGPOkUiLSJqEZHIkUJGNqZLIOLH2IsfR+NEhdhPMnZ7Ct5u9Aw5eM4uGm1mmLPoJPHUS327T9q10PU5i8x3/z9HuZ78BSxpH5CBl6n0AAAAASUVORK5CYII="
	num_6     = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAAAsSAAALEgHS3X78AAAC+UlEQVRIx52VsWscVxCHv3m7eyfHkgwyNrJACsaHEU4RZKNChQorhToHUhnifyAqkn/ApcqkSOMqpbo0UToXVmOwC4Fc6TBIja2giAREcifs27u3Myne7d6uby8mGTiOm9v9Zt7vN+89wYkJCWYK4sGoCTeWEWQsFyEgEWaOzN4TYwnf//CEW7dvcvlKAoMMRHAiIODEkamWEDYRLkT0Bp5O13j41X1iUG7dvsnn91aJE8h8AKkqhgWW2KhfkVCgZoXeK83piF4afseI58rcFC7O+KvTxfgEgF6q/Ndo2iXOO2fMXZ0dwhWyfoZlgjEF1EN32gf8cnTI6UWnyK3OL7K9vslMoxkash7CDDqIhvCPxOlFh2+f7VageeyfndDtpwXczCrfNfDcqPDAJHBdqGZIyedaeF55p30wBt5YarF89Rr7v//G/tnJB3DDOZsMN7MCvvfmuPLfj188YHV+EYBHd+6y9/a4kGT0LlDIIiAKTgW8x0gA6PZTXp//Wbz4Zeszdg5f8d2zXwFYmJ5la2WtAheJyLzHLGjjMDAxTEJBxVDg9fkfla53jw8rMpxedHj8/Cl7b48rnZc3gING0JkMsxjNDM1qz4DaePLqZUlzzRXJ4QmIYCiqghI+dbG1ssbWylold3rRKUw3s7CrR4ZG5CkTh5kvDC3H9vomG0utQu/Hz5+OPWNmlbYcvENMwBwZA3QIXp67XtX8qE23n9Ltp+wetWtX5hBEHDo86GJg2LeMRgmYaTRZnV8sTNw/O2Hz55/GgAvTsyxMz44mplxMCmgAmxlqofI3H+g7yYcCLAKSn5zDWyC4LKO6w+6X566xvb45EVz2IdccrHS2iGKqw10VqpYN3Vhq8eLrFjvtgwr40Z27tQXLsxCbKVkkDKIYNMJl76i71ibByuHjFOcT1PkAdwgN50ikRyRdsuTSRyGToqFKIk1izTvH0fl7QOym+HTpMj7t5gsc3WYWjc9+aSwKAxdu4NOU1PdCPk5i8wP/v7v9t/gHX354HyrV8GkAAAAASUVORK5CYII="
	num_7     = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAAAsSAAALEgHS3X78AAAChklEQVRIx62VvW4TQRSFvzu7ayeYxFKoQBFRFCkSljAFQlQUFKEKDaFASt6BEokWiQoKClJCkxI6OspU6XiFSEGiQFFii8SOZ++lGNv747WVIE6zs7M735y5P7uCExMSzBTEg1EhNzEjyMRchIBEmDlSOyfGEt6932VtfZVGM4FBCiI4ERBw4khVcwibChciegNPp2u8ePaYGJS19VXu3X9AnEDqA0hVMSywxDK/ImGDihN6r9SvR/T64T5GPM2lOVycctLpYlwDoNdXrqq6zXPc+cXSjcUhXCG9SLFUMOaAAO1+3eP3m1eXgq7++BkMWQ9hAR1EQ/h/lJkVrhVwuQqP+YePxmPVFMktr4SbGbU7bZZevq4EHn94Ox4vPN/JwQ3nbDrczDAz6q029VZ7Avzn+7ds8fIKjY3N0lpgGBaHgCg4FfAeSxnltFLdL3vj8eLWdvHMEpF6w0yGzg1MDJOwoYpNBZ8f7HN+sJ+FZGun8DwkshCWWogzKWYxqlnDlHX66WMB7BabheeqWmiuGBIQwVBUBZ1SLGXXjSebE++UnTuIsNDomDjMLDiY4breahdKsAAvOj9DTMAcKReoTQbEHx2WYr1NlUJ1yNhcDAx9S1ZKJZ183s0Ai00aG0+ZprwxJ2NoAJsZallY/NEh3a9Z+VUlcgyW4FyGbepGWQ61Odw35z7vGiZruyqh2bdFFFMddlXY1XKxqbfukixnn4F4eYVZyoc1NlPSSBhEMWiES8/I/9bKjTJLPu7jfII6H+AOoeYcifSIpEuazF8aVlZNlUTqxDpyjqNzOiB2c6zcbuD73dEBs7+ZRYVQheyVEgm4Wzfx/T593wvzcRKbH/h/djtLfwELcDd/eYdSrwAAAABJRU5ErkJggg=="
	num_8     = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAABmJLR0QAAAAAAAD5Q7t/AAAACXBIWXMAAAsSAAALEgHS3X78AAADD0lEQVRIx52VO4gbVxSGv3NnZrUbRSuzMSaPJcIYXLhwAiEEDClSbMCgNNnGONts5WILV0nA4MpgcB6FC4e4cmNDmu1SpUyqtC62DYqFMcEslkRsTXTnnBR3NDN3pXUeBwahc+/85z//eYzgxIQMMwXxYCwxt+ARZMGXICAJZo7CXpBiGd98+x1nzp6m3c1gVoAITgQEnDgK1QaEHQsuJExnnvHEuPTpR6SgnDl7mnfee580g8IHIFXFsIAlVvMVCQGWZOi90no1YZqH/yni6W6s4tKCZ+MJxisATHPlv1rL1jgcP2HjtfUSXKH4q8AKwVgFYtD84CGT/QdM9u/XFVjvcmJ3j+7uXnR3alOEDjpLjqlUw178+guPL1+MgAF0POLw9k0e9S+g41FdDTOs/D0GXMoHnt74Mjrp7u7R3urXGg8HUWDVogIOsiwBNzP8cIAfDirvyeu36GzvAPD48kXyg4cAzIa/N8AN52rwBeZmFkWvdT7xjwUN7wLl+ykCouBUwHuMLBxs9kg3exX7pze+wK13+fOnHyvWAO2Pa5lEEgrvMZOSuYGJYRICKlb1y6mvvsetd6siPrlyKdJ44+o11j74MGLeHAAHK0FnCsxStDC0CBda587T3vpkqQTzzJqmqjQVdZCBCIaiKijhmReuybSzvVNl4ocD/vj8CqN7d2LNY+YJc5eJw8xQVUb37kTavn73B05ev0Xv5wNa585X/mdHwImZP0dMwBwFM3RJp6SbvUjbzvZntRSNIXIIIg4tF50DSt5SteHRVvTDQZV+GJwHjRbtRnebu9JJBBpSU9NoEgEOb9/kt3ff4lH/QiTXfLBCKwrIfHOWzEOV67HHghSnvr67wKxpne0dNq5eW2hFq4dIMdVyqkLU+WF7q097q89k/36kLbCwEesAjVqZKUUizJIUNMEVzzm6FZqpv8x8muN8hjofwB3CinNkMiWRCUW29q+AltmKKpm0SHXOHMd4NCN1q/TebuPzyTzB+mtmyeIya7RFVcA338DnObmfBn+apeZn/n+zfZn9DWpHjRIn55ItAAAAAElFTkSuQmCC"
	question  = "iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAABmJLR0QAAAAAAAD5Q7t/AAACZUlEQVRIS61Vy27UMBQ9TjKv8pKKCipd8SoSC1hAhVjyC6z4qW75CTaVWCBWbGCF+IxKgFgxEk0Yx5dznKSTmTqUjjgjJ2Pn5pzr42vHIXPmMIJZAJwHDAlk7X0Jx986co25nFwZajtRzNgOD1/j7v5tXLo2AhY1A6SpQNI6BgYKn6JRT5E70pcLj59zw6uXLxRT2NHb93j85AAFuWvfEAUSmojE5brpMFyi3fgaPN+dXKZABTzY3WZ0Bvvw8RPu3H9IxTnf2YqBZdXP9t8wsRlOwldsX7+K/d2bpCZH/buG1Y7EU4aIdJX4YO/GShtCaSWzvYKwyGP/7Er10Cf7fPw9NmFIyCwaGe9CglyeuiSp0PX7Qh1CoAMtsZAk7573SVNYfx4CM1dJtzhDLuVHOztt72KItjS+xH4mFxzFssA/3nNh4/i5WafguIFqL4FmD7AQKcQ6Vl+Cqm5hfbFSSC0or02HoC1j3lSGWowCoTZ8Of52bub9Be8QN96SW+Tcltx1xpwDrQkUUvsbUsRC9Hw1cx407ZDxHFGAMkhBpEPEQrRlNfNfPDpkOA8oLBD680pApEOWqTocE+ySi6XY5K365r+2bYq+oZmOziVpM7XQ2wgXQTwx2ZqTs828WWUNtLoDiQ/Z0aGZ8XLmtInE8igOLFU3RcsbkeksqHOHRV5wClNk/NLlIU5oBV2ldNWSgi+qaGkQCZFphce8jlyJ3P1g2VNabQOM6cDMTVAEJkrQhMLeHL3D0+fPsDXL4at5fBD9p0aUMX101wR77p0u4GTK9ytUvsS9W3v8go4K8/yo/n8AfwA9DkTHgE3RmAAAAABJRU5ErkJggg=="
)
var (
	ImgNum        [9]fyne.Resource
	Img_flag      fyne.Resource
	Img_invisible fyne.Resource
	Img_mine      fyne.Resource
	Img_question  fyne.Resource
)

func InitImg() (err error) {
	var (
		data []byte
	)
	data, err = base64.StdEncoding.DecodeString(flag)
	Img_flag = fyne.NewStaticResource("Img_flag", data)

	data, err = base64.StdEncoding.DecodeString(invisible)
	Img_invisible = fyne.NewStaticResource("Img_invisible", data)

	data, err = base64.StdEncoding.DecodeString(mine)
	Img_mine = fyne.NewStaticResource("Img_mine", data)

	data, err = base64.StdEncoding.DecodeString(question)
	Img_question = fyne.NewStaticResource("Img_question", data)

	data, err = base64.StdEncoding.DecodeString(num_0)
	ImgNum[0] = fyne.NewStaticResource("num_0", data)

	data, err = base64.StdEncoding.DecodeString(num_1)
	ImgNum[1] = fyne.NewStaticResource("num_1", data)
	data, err = base64.StdEncoding.DecodeString(num_2)
	ImgNum[2] = fyne.NewStaticResource("num_2", data)
	data, err = base64.StdEncoding.DecodeString(num_3)
	ImgNum[3] = fyne.NewStaticResource("num_3", data)
	data, err = base64.StdEncoding.DecodeString(num_4)
	ImgNum[4] = fyne.NewStaticResource("num_4", data)
	data, err = base64.StdEncoding.DecodeString(num_5)
	ImgNum[5] = fyne.NewStaticResource("num_5", data)
	data, err = base64.StdEncoding.DecodeString(num_6)
	ImgNum[6] = fyne.NewStaticResource("num_6", data)
	data, err = base64.StdEncoding.DecodeString(num_7)
	ImgNum[7] = fyne.NewStaticResource("num_7", data)
	data, err = base64.StdEncoding.DecodeString(num_8)
	ImgNum[8] = fyne.NewStaticResource("num_8", data)

	// Img_flag, err = fyne.LoadResourceFromPath("./img/flag.png")
	// if err != nil {
	// 	return
	// }
	// Img_invisible, err = fyne.LoadResourceFromPath("./img/invisible.png")
	// if err != nil {
	// 	return
	// }
	// Img_mine, err = fyne.LoadResourceFromPath("./img/mine.png")
	// if err != nil {
	// 	return
	// }
	// Img_question, err = fyne.LoadResourceFromPath("./img/question.png")
	// if err != nil {
	// 	return
	// }
	// for i := range ImgNum {
	// 	ImgNum[i], err = fyne.LoadResourceFromPath("./img/num(" + strconv.Itoa(i) + ").png")
	// 	if err != nil {
	// 		return
	// 	}
	// }
	return
}
